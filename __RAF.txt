================= EN COURS =======================


================= PRIO 00 =======================

.Ajouter un Nugets.bat dans Domain/Nugets/.
    . déplacer dedans, la constante "NUGETS_EXTENSION" qui était dans NugetsService.bat.
    . y écrire une fonctionnalité permettant d'extraire le nom et la version d'un fichier Package, 
      à partir de son chemin+nom+ext
      (plus précisément à partir de son nom : [NomPackage].[VersionPackage])
        1. Virer chemin
        2. Virer suffixe ".nupkg" si existe.
        3. Couper en 2 le nom, au niveau du 1er point à gauche. <<
       +TU

.Ajouter à 7Zip.bat : une fonctionnalité permettant d'ajouter au Zip, une arbo. ou un fichier, 
                      dans l'une de ses arborescences intérieures.
                      +TU
.Ajouter à NugetsService.bat : 
    .une fonctionnalité permettant d'ajouter au Package, une arbo. ou un fichier, 
     dans son arborescence intérieure : lib/net[dotnetVersion]/
     +TU
     
    .une fonctionnalité permettant d'unpacker un Package, dans l'arbo %USERPROFILE%/.nugets/packages/[PackageName]/PackageVersion]/,
     comme est capable de le faire Visual Studio en fait !
     +TU


================= PRIO 01 =======================
. Ajout à .\Src\Transverse._Common\String.bat
  .d'une fonction IsEndedBy

  + TU bien sûr

. Ajouter à DiskElementsService.bat + TU :
  . CreateEmptyFile   (COPY NUL "MonFichierSeralorsVide.txt")
  . IsEmptyFile (cf. DIVERS.TXT)
  . GetFileContent (cf. DIVERS.TXT)



================= PRIO 02 =======================

- Ajout d'un .\Src\Transverse._Common\Number.bat
  .contenant une fonction IsInt    pour savoir si le param. reçu est un entier
  .contenant une fonction IsPositiveInt pour savoir si le param. reçu est un entier positif
  .contenant une fonction IsNegativeInt pour savoir si le param. reçu est un entier négatif
  .contenant une fonction IsZero        pour savoir si le param. reçu est un entier valant zéro
  .contenant une fonction IsNDigitsPositiveInt pour savoir si le param. reçu est un entier positif à N digits
  .IsGreaterThan
  .IsGreaterOrEqualTo  
  +Ecrire leurs TU. 

- Ajouter au _TestingLibAdapter.bat et la lib. Testing, le traitement d'Assertions du type ci-dessus :
   IsInt ... à ... IsNDigitsPositiveInt (et MAJ de la Testing Lib--->(cf. D:\__LIBS\Testing\zzDOS\_RAF.txt))

- dans DateTimeTests.bat, ajouter les TU pour la fonction GetTime de ./Src/Transverse.Infra/DateTime.bat


================= PRIO 03 =======================

. Mettre à jour DateTimeTests.bat de sorte à exploiter les nouvelles assertions (IsInt, ... IsNDigitsPositiveInt, ...)
  dispos dans la Testing Lib(cf. PRIO 02).

. Ecrire les TU pour EmptyFolder et DeleteFile de .\Src\Transverse.Infra\Services\DiskElementsService.bat


================= PRIO 04 =======================


================= PRIO 07 =======================
- Ajout dans .\Src\Transverse.Infra\DiskElements\DiskElements.bat
  .d'une fonction de CleanUp du FullName d'un DiskElement (retait (autant que possible (DOS)) des caractères interdits ))
   + TESTS bien sûr.


================= PRIO 15 =======================
- Ajout dans .\Src\Transverse.Infra\DateTime.Bat  
  .d'une fonction d'ajout de nombre de jours à une date donnée
  .d'une fonction d'ajout de nombre de mois à une date donnée
  .d'une fonction d'ajout de nombre d'années à une date donnée

  + leurs TESTS (c'est du boulot !)